{"version":3,"sources":["./src/app/actor/actor.component.ts","./src/app/actor/actor.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/database.service.ts","./src/app/app-routing.module.ts","./src/app/movie/movie.component.ts","./src/app/movie/movie.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from '../database.service';\n\n@Component({\n  selector: 'app-actor',\n  templateUrl: './actor.component.html',\n  styleUrls: ['./actor.component.css'],\n})\nexport class ActorComponent implements OnInit {\n  actorsDB: any[] = [];\n  moviesDB: any[] = [];\n  actors2000:any[]=[]\n  section = 1;\n  fullName: string = '';\n  bYear: number = 0;\n  actorId: string = '';\n\n  constructor(private dbService: DatabaseService) {}\n  //Get all Actors\n  onGetActors() {\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  //Get all Actors >= 2000\n  onGetActors2000(){\n    this.dbService.getActorsByYear(2000).subscribe((data: any[]) => {\n      this.actors2000 = data;\n    });\n  }\n  //Get all movies\n  onGetMovies() {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n  //Create a new Actor, POST request\n  onSaveActor() {\n    let obj = { name: this.fullName, bYear: this.bYear, movies: [] };\n    this.dbService.createActor(obj).subscribe((result) => {\n      this.onGetActors();\n      this.onGetActors2000()\n    });\n  }\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n  onUpdateActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.updateActor(this.actorId, obj).subscribe((result) => {\n      this.onGetActors();\n      this.onGetActors2000()\n    });\n  }\n  //Delete Actor\n  onDeleteActor(item) {\n    this.dbService.deleteActor(item._id).subscribe((result) => {\n      this.onGetActors();\n      this.onGetActors2000()\n    });\n  }\n\n  // This lifecycle callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetActors();\n    this.onGetMovies();\n    this.onGetActors2000()\n  }\n  changeSection(sectionId) {\n    this.section = sectionId;\n    this.resetValues();\n  }\n  resetValues() {\n    this.fullName = '';\n    this.bYear = 0;\n    this.actorId = '';\n  }\n}\n","<div class=\"jumbotron text-center\">\n  <h1>Actors DB System</h1>\n</div>\n<!-- The navigation bar -->\n<nav class=\"navbar navbar-expand-sm bg-light\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\" style=\"padding-left: 0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(1)\">Actors</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left: 0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(2)\">Add Actor</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left: 0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(3)\">Update Actor</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left: 0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(4)\">Delete Actor</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left: 0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(5)\">Get Actors After and Equal To 2000</a>\n    </li>\n  </ul>\n</nav>\n<!-- First section: Display all in a tble -->\n<div class=\"section\" *ngIf=\"section == 1\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Name</th>\n      <th>Birth Year</th>\n    </tr>\n    <tr *ngFor=\"let item of actorsDB\">\n      <td>{{ item.name }}</td>\n      <td>{{ item.bYear }}</td>\n    </tr>\n  </table>\n</div>\n<!-- Second Section: Add new actor -->\n<div class=\"section\" *ngIf=\"section == 2\">\n  <div class=\"form-group\">\n    <label for=\"actorName\">Full Name</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"actorName\"\n      [(ngModel)]=\"fullName\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"actorName\">Birth Year</label>\n    <input\n      type=\"number\"\n      class=\"form-control\"\n      id=\"actorName\"\n      [(ngModel)]=\"bYear\"\n    />\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveActor()\">\n    Save Actor\n  </button>\n</div>\n<!-- Section 3: Update actor -->\n<div class=\"section\" *ngIf=\"section == 3\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Name</th>\n      <th>Birth Year</th>\n      <th>Select!</th>\n    </tr>\n    <tr *ngFor=\"let item of actorsDB\">\n      <td>{{ item.name }}</td>\n      <td>{{ item.bYear }}</td>\n      <td>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          (click)=\"onSelectUpdate(item)\"\n        >\n          Update\n        </button>\n      </td>\n    </tr>\n  </table>\n  <hr />\n  <div *ngIf=\"actorsDB.length > 0\">\n    <div class=\"form-group\">\n      <label for=\"actorName\">Full Name</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"actorName\"\n        [(ngModel)]=\"fullName\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"actorName\">Birth Year</label>\n      <input\n        type=\"number\"\n        class=\"form-control\"\n        id=\"actorName\"\n        [(ngModel)]=\"bYear\"\n      />\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onUpdateActor()\">\n      Update Actor\n    </button>\n  </div>\n</div>\n<!-- Section 4: Delete Actor -->\n<div class=\"section\" *ngIf=\"section == 4\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Name</th>\n      <th>Birth Year</th>\n      <th>Delete?</th>\n    </tr>\n    <tr *ngFor=\"let item of actorsDB\">\n      <td>{{ item.name }}</td>\n      <td>{{ item.bYear }}</td>\n      <td>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          (click)=\"onDeleteActor(item)\"\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n<!-- Section 5 -- get actors after and equal to 2000 -->\n<div class=\"section\" *ngIf=\"section == 5\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Name</th>\n      <th>Birth Year</th>\n    </tr>\n    <tr *ngFor=\"let item of actors2000\">\n      <td>{{ item.name }}</td>\n      <td>{{ item.bYear }}</td>\n    </tr>\n  </table>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'movieAng';\n  selected = 0;\n\n  changeSelected(number) {\n    this.selected = number;\n  }\n}\n","<button\n  button\n  type=\"submit\"\n  class=\"btn btn-primary\"\n  (click)=\"changeSelected(0)\"\n>\n  Home\n</button>\n<button\n  button\n  type=\"submit\"\n  class=\"btn btn-primary\"\n  (click)=\"changeSelected(1)\"\n>\n  Navigate to Actors\n</button>\n<button\n  button\n  type=\"submit\"\n  class=\"btn btn-primary\"\n  (click)=\"changeSelected(2)\"\n>\n  Navigate to Movies\n</button>\n<div *ngIf=\"selected === 0\" class=\"jumbotron text-center\">\n  <h1>Actors & Movies DB System</h1>\n</div>\n\n<app-actor *ngIf=\"selected === 1\"></app-actor>\n<app-movie *ngIf=\"selected === 2\"></app-movie>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ActorComponent } from './actor/actor.component';\nimport { DatabaseService } from './database.service';\nimport { MovieComponent } from './movie/movie.component';\n\n@NgModule({\n  declarations: [AppComponent, ActorComponent, MovieComponent],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],\n  providers: [DatabaseService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DatabaseService {\n  constructor(private http: HttpClient) {}\n  result: any;\n  getActors() {\n    return this.http.get('/actors');\n  }\n  getActorsByYear(year){\n    return this.http.get(`/actors/${year}`)\n  }\n  getMovies() {\n    return this.http.get('/movies');\n  }\n  getActor(id: string) {\n    let url = '/actors/' + id;\n    return this.http.get(url);\n  }\n  createActor(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n    return this.http.post('/actors', data, httpOptions);\n  }\n  createMovie(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n    return this.http.post('/movies', data, httpOptions);\n  }\n  updateActor(id, data) {\n    let url = '/actors/' + id;\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n    return this.http.put(url, data, httpOptions);\n  }\n  deleteActor(id) {\n    let url = '/actors/' + id;\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n    return this.http.delete(url, httpOptions);\n  }\n  deleteMovie(id) {\n    let url = '/movies/' + id;\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n    return this.http.delete(url, httpOptions);\n  }\n  deleteMovies(year) {\n    let url = '/movies/';\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n      body: { year: year },\n    };\n    return this.http.delete(url, httpOptions);\n  }\n  addActorToMovie(movieId, actor) {\n    let url = `/movies/${movieId}/actors`;\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n    return this.http.put(url, actor, httpOptions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from '../database.service';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css'],\n})\nexport class MovieComponent implements OnInit {\n  moviesDB: any[] = [];\n  actorsDB: any[] = [];\n  section = 9;\n  title: string = '';\n  year: number = 0;\n  beforeYear: number = 0;\n  selectedActor = null;\n  selectedMovie = null;\n  constructor(private dbService: DatabaseService) {}\n\n  ngOnInit(): void {\n    this.onGetMovies();\n    this.onGetActors();\n  }\n\n  changeSection(sectionId) {\n    this.section = sectionId;\n    this.resetValues();\n  }\n\n  resetValues() {\n    this.title = '';\n    this.year = 0;\n    this.beforeYear = 0;\n    this.selectedActor = null;\n    this.selectedMovie = null;\n  }\n  changeSelectedActor(item) {\n    this.selectedActor = item;\n  }\n  changeSelectedMovie(item) {\n    this.selectedMovie = item;\n  }\n\n  //Get all movies\n  onGetMovies() {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n  //Get all actors\n  onGetActors() {\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  //Delete Movie\n  onDeleteMovie(item) {\n    this.dbService.deleteMovie(item._id).subscribe((result) => {\n      this.onGetMovies();\n    });\n  }\n\n  //Delete Movies before year\n  onDeleteMovies() {\n    this.dbService.deleteMovies(this.beforeYear).subscribe((result) => {\n      this.onGetMovies();\n    });\n  }\n  //Add Movie\n  onSaveMovie() {\n    let obj = { title: this.title, year: this.year, actors: [] };\n    this.dbService.createMovie(obj).subscribe((result) => {\n      this.onGetMovies();\n    });\n  }\n\n  onSavingActorToMovie() {\n    this.dbService\n      .addActorToMovie(this.selectedMovie._id, this.selectedActor)\n      .subscribe((result) => {\n        this.onGetMovies();\n        this.onGetActors();\n      });\n    this.selectedActor = null;\n    this.selectedMovie = null;\n  }\n}\n","<div class=\"jumbotron text-center\">\n  <h1>Movies DB System</h1>\n</div>\n<!-- The navigation bar -->\n<nav class=\"navbar navbar-expand-sm bg-light\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\" style=\"padding-left: 0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(9)\">All Movies</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left: 0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(5)\">Add Movie</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left: 0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(6)\">Delete Movie</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left: 0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(7)\"\n        >Delete Movies From Year</a\n      >\n    </li>\n    <li class=\"nav-item\" style=\"padding-left: 0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(8)\"\n        >Add Actor To Movie</a\n      >\n    </li>\n  </ul>\n</nav>\n\n<!-- Section 5: Add Movie-->\n<div class=\"section\" *ngIf=\"section == 5\">\n  <div class=\"form-group\">\n    <label for=\"movieTitle\">Movie Title</label>\n    <input type=\"text\" class=\"form-control\" id=\"title\" [(ngModel)]=\"title\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"movieYear\">Movie Year</label>\n    <input type=\"number\" class=\"form-control\" id=\"year\" [(ngModel)]=\"year\" />\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveMovie()\">\n    Save Movie\n  </button>\n</div>\n\n<!-- Section 6: Delete Movie -->\n<div class=\"section\" *ngIf=\"section == 6\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Title</th>\n      <th>Year</th>\n      <th>Actors</th>\n      <th>Delete?</th>\n    </tr>\n    <tr *ngFor=\"let item of moviesDB\">\n      <td>{{ item.title }}</td>\n      <td>{{ item.year }}</td>\n      <td *ngIf=\"item.actors.length > 0\">\n        <ul *ngFor=\"let actor of item.actors\" style=\"margin: 0; padding: 0\">\n          <li style=\"list-style-type: none\">\n            {{ actor.name }}\n          </li>\n        </ul>\n      </td>\n      <td *ngIf=\"item.actors.length == 0\">No Actors</td>\n      <td>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          (click)=\"onDeleteMovie(item)\"\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n<!-- Section 7: Delete Movie Before Year -->\n<div class=\"section\" *ngIf=\"section == 7\">\n  <label for=\"movieYear\">Movie Year</label>\n  <input\n    type=\"number\"\n    class=\"form-control\"\n    id=\"beforeYear\"\n    [(ngModel)]=\"beforeYear\"\n  />\n  <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteMovies()\">\n    Delete Movies\n  </button>\n</div>\n<!-- Section 8: Add Actor To Movie -->\n<div class=\"section\" *ngIf=\"section == 8\">\n  <h3>Actors</h3>\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Name</th>\n      <th>Birth Year</th>\n      <th>Select!</th>\n    </tr>\n    <tr *ngFor=\"let item of actorsDB\">\n      <td>{{ item.name }}</td>\n      <td>{{ item.bYear }}</td>\n      <td>\n        <button\n          *ngIf=\"selectedActor !== null && selectedActor !== item\"\n          class=\"btn btn-secondary\"\n          disabled\n        >\n          Select\n        </button>\n        <button\n          *ngIf=\"selectedActor === null\"\n          class=\"btn btn-primary\"\n          (click)=\"changeSelectedActor(item)\"\n        >\n          Select\n        </button>\n        <button *ngIf=\"selectedActor === item\" class=\"btn btn-success\">\n          Selected\n        </button>\n      </td>\n    </tr>\n  </table>\n  <br />\n  <h3>Movies</h3>\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Title</th>\n      <th>Year</th>\n      <th>Select!</th>\n    </tr>\n    <tr *ngFor=\"let item of moviesDB\">\n      <td>{{ item.title }}</td>\n      <td>{{ item.year }}</td>\n      <td>\n        <button\n          *ngIf=\"selectedMovie !== null && selectedMovie !== item\"\n          class=\"btn btn-secondary\"\n          disabled\n        >\n          Select\n        </button>\n        <button\n          *ngIf=\"selectedMovie === null\"\n          class=\"btn btn-primary\"\n          (click)=\"changeSelectedMovie(item)\"\n        >\n          Select\n        </button>\n        <button *ngIf=\"selectedMovie === item\" class=\"btn btn-success\">\n          Selected\n        </button>\n      </td>\n    </tr>\n  </table>\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary\"\n    (click)=\"onSavingActorToMovie()\"\n  >\n    Insert Actor To Movie\n  </button>\n</div>\n<!-- Section 9: Available Movies -->\n<div class=\"section\" *ngIf=\"section == 9\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Title</th>\n      <th>Year</th>\n      <th>Actors</th>\n    </tr>\n    <tr *ngFor=\"let item of moviesDB\">\n      <td>{{ item.title }}</td>\n      <td>{{ item.year }}</td>\n      <td *ngIf=\"item.actors.length > 0\">\n        <ul *ngFor=\"let actor of item.actors\" style=\"margin: 0; padding: 0\">\n          <li style=\"list-style-type: none\">\n            {{ actor.name }}\n          </li>\n        </ul>\n      </td>\n      <td *ngIf=\"item.actors.length == 0\">No Actors</td>\n    </tr>\n  </table>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}